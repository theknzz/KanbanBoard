{"ast":null,"code":"import _objectSpread from\"/home/joaquim/internship/kanban/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/joaquim/internship/kanban/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/joaquim/internship/kanban/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n    padding: 8px;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    padding: 8px;\\n    transition: background-color 0.2s ease;\\n    background-color: \",\";\\n    flex-grow: 1;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    padding: 8px;\\n    text-align: center;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    margin: 8px;\\n    border: 1px solid lightgrey;\\n    border-radius: 2px;\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n    min-height: 100%;\\n    background-color: #9CC5A1;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import styled from'styled-components';import Task from'./Task.jsx';import{Droppable}from'react-beautiful-dnd';import{connect}from'react-redux';import{createTask}from\"../store/actions/taskActions\";var Container=styled.div(_templateObject());var Title=styled.h3(_templateObject2());var TaskList=styled.div(_templateObject3(),function(props){return props.isDraggingOver?'skyblue':'white';});var CreateTask=styled.div(_templateObject4());var Column=function Column(props){var _useState=useState({columnId:props.column.id,task:'',title:props.column.title}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var handleSubmit=function handleSubmit(e){e.preventDefault();props.submitTask(state);console.log(state);setState(_objectSpread(_objectSpread({},state),{},{task:''}));};var handleChange=function handleChange(e){var name=e.target.value;var newState=_objectSpread(_objectSpread({},state),{},{task:name,title:props.column.title});setState(newState);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Title,null,props.column.title),/*#__PURE__*/React.createElement(Droppable,{droppableId:props.column.id},function(provided,snapshot){return/*#__PURE__*/React.createElement(TaskList,Object.assign({ref:provided.innerRef},provided.droppableProps,{isDraggingOver:snapshot.isDraggingOver}),props.tasks&&props.tasks.map(function(task,index){return/*#__PURE__*/React.createElement(Task,{key:task.id,task:task,index:index});}),provided.placeholder);}),/*#__PURE__*/React.createElement(CreateTask,null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"input\",{value:state.task,onChange:handleChange,type:'text'})))));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{submitTask:function submitTask(task){return dispatch(createTask(task));}};};export default connect(null,mapDispatchToProps)(Column);","map":{"version":3,"sources":["/home/joaquim/internship/kanban/src/components/Column.jsx"],"names":["React","useState","styled","Task","Droppable","connect","createTask","Container","div","Title","h3","TaskList","props","isDraggingOver","CreateTask","Column","columnId","column","id","task","title","state","setState","handleSubmit","e","preventDefault","submitTask","console","log","handleChange","name","target","value","newState","provided","snapshot","innerRef","droppableProps","tasks","map","index","placeholder","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Task from './Task.jsx'\nimport { Droppable } from 'react-beautiful-dnd'\nimport { connect } from 'react-redux'\nimport { createTask } from \"../store/actions/taskActions\";\n\nconst Container = styled.div`\n    margin: 8px;\n    border: 1px solid lightgrey;\n    border-radius: 2px;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    min-height: 100%;\n    background-color: #9CC5A1;\n`;\n\nconst Title = styled.h3`\n    padding: 8px;\n    text-align: center;\n`;\nconst TaskList = styled.div`\n    padding: 8px;\n    transition: background-color 0.2s ease;\n    background-color: ${ props => props.isDraggingOver ? 'skyblue' : 'white'};\n    flex-grow: 1;\n`;\n\nconst CreateTask = styled.div`\n    padding: 8px;\n`\n\n\nconst Column = (props) => {\n\n    const [state, setState] = useState({\n        columnId: props.column.id,\n        task: '',\n        title: props.column.title,\n    });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.submitTask(state);\n        console.log(state)\n        setState({\n            ...state,\n            task: ''\n        })\n    }\n\n    const handleChange = (e) => {\n        const name = e.target.value;\n        const newState = {\n            ...state,\n            task: name,\n            title: props.column.title,\n        }\n        setState(newState);\n    }\n\n    return (\n        <>\n            <Container>\n                <Title>{ props.column.title }</Title>\n                <Droppable\n                    droppableId={props.column.id}\n                >\n                    {(provided,snapshot) => (\n                        <TaskList\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                            isDraggingOver={snapshot.isDraggingOver}\n                        >\n                            {props.tasks && props.tasks.map( (task, index) => <Task key={task.id} task={task} index={index}/>)}\n                            {provided.placeholder}\n                        </TaskList>\n                    )}\n                </Droppable>\n                <CreateTask>\n                    <form onSubmit={handleSubmit}>\n                        <input value={state.task} onChange={handleChange} type={'text'}/>\n                    </form>\n                </CreateTask>\n            </Container>\n        </>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        submitTask: (task) => dispatch(createTask(task))\n    }\n}\n\n\nexport default connect(null, mapDispatchToProps)(Column)"]},"metadata":{},"sourceType":"module"}