{"ast":null,"code":"var _jsxFileName = \"/home/joaquim/internship/kanban/src/components/Column.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Task from './Task.jsx';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { connect } from 'react-redux';\nimport { createTask } from \"../store/actions/taskActions\";\nconst Container = styled.div`\n    margin: 8px;\n    border: 1px solid lightgrey;\n    border-radius: 2px;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    min-height: 100%;\n    background-color: #9CC5A1;\n`;\nconst Title = styled.h3`\n    padding: 8px;\n    text-align: center;\n`;\nconst TaskList = styled.div`\n    padding: 8px;\n    transition: background-color 0.2s ease;\n    background-color: ${props => props.isDraggingOver ? 'skyblue' : 'white'};\n    flex-grow: 1;\n`;\nconst CreateTask = styled.div`\n    padding: 8px;\n`;\n\nconst Column = props => {\n  const [state, setState] = useState({\n    columnId: props.column.id,\n    task: '',\n    title: props.column.title\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault(); // props.submitTask(state);\n\n    console.log(state);\n    setState({ ...state,\n      task: ''\n    });\n  };\n\n  const handleChange = e => {\n    const name = e.target.value;\n    const newState = { ...state,\n      task: name,\n      title: props.column.title\n    };\n    setState(newState);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, props.column.title), /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: props.column.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, (provided, snapshot) => /*#__PURE__*/React.createElement(TaskList, Object.assign({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    isDraggingOver: snapshot.isDraggingOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }), props.tasks && props.tasks.map((task, index) => /*#__PURE__*/React.createElement(Task, {\n    key: task.id,\n    task: task,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 79\n    }\n  })), provided.placeholder)), /*#__PURE__*/React.createElement(CreateTask, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: state.task,\n    onChange: handleChange,\n    type: 'text',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitTask: task => dispatch(createTask(task))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Column);","map":{"version":3,"sources":["/home/joaquim/internship/kanban/src/components/Column.jsx"],"names":["React","useState","styled","Task","Droppable","connect","createTask","Container","div","Title","h3","TaskList","props","isDraggingOver","CreateTask","Column","state","setState","columnId","column","id","task","title","handleSubmit","e","preventDefault","console","log","handleChange","name","target","value","newState","provided","snapshot","innerRef","droppableProps","tasks","map","index","placeholder","mapDispatchToProps","dispatch","submitTask"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Task from './Task.jsx'\nimport { Droppable } from 'react-beautiful-dnd'\nimport { connect } from 'react-redux'\nimport { createTask } from \"../store/actions/taskActions\";\n\nconst Container = styled.div`\n    margin: 8px;\n    border: 1px solid lightgrey;\n    border-radius: 2px;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    min-height: 100%;\n    background-color: #9CC5A1;\n`;\n\nconst Title = styled.h3`\n    padding: 8px;\n    text-align: center;\n`;\nconst TaskList = styled.div`\n    padding: 8px;\n    transition: background-color 0.2s ease;\n    background-color: ${ props => props.isDraggingOver ? 'skyblue' : 'white'};\n    flex-grow: 1;\n`;\n\nconst CreateTask = styled.div`\n    padding: 8px;\n`\n\n\nconst Column = (props) => {\n\n    const [state, setState] = useState({\n        columnId: props.column.id,\n        task: '',\n        title: props.column.title,\n    });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // props.submitTask(state);\n        console.log(state)\n        setState({\n            ...state,\n            task: ''\n        })\n    }\n\n    const handleChange = (e) => {\n        const name = e.target.value;\n        const newState = {\n            ...state,\n            task: name,\n            title: props.column.title,\n        }\n        setState(newState);\n    }\n\n    return (\n        <>\n            <Container>\n                <Title>{ props.column.title }</Title>\n                <Droppable\n                    droppableId={props.column.id}\n                >\n                    {(provided,snapshot) => (\n                        <TaskList\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                            isDraggingOver={snapshot.isDraggingOver}\n                        >\n                            {props.tasks && props.tasks.map( (task, index) => <Task key={task.id} task={task} index={index}/>)}\n                            {provided.placeholder}\n                        </TaskList>\n                    )}\n                </Droppable>\n                <CreateTask>\n                    <form onSubmit={handleSubmit}>\n                        <input value={state.task} onChange={handleChange} type={'text'}/>\n                    </form>\n                </CreateTask>\n            </Container>\n        </>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        submitTask: (task) => dispatch(createTask(task))\n    }\n}\n\n\nexport default connect(null, mapDispatchToProps)(Column)"]},"metadata":{},"sourceType":"module"}