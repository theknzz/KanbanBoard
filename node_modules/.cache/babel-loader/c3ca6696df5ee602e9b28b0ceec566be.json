{"ast":null,"code":"var _jsxFileName = \"/home/joaquim/internship/react-dnd-course/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport initialData from \"./initial-data\";\nimport Column from './components/Column.jsx';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nfunction App() {\n  const [state, setState] = useState(initialData);\n\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    const column = state.columns[source.droppableId];\n    const newTaskIds = Array.from(column.taskIds);\n    newTaskIds.splice(source.index, 1);\n    newTaskIds.splice(destination.index, 0, draggableId);\n    const newColumn = { ...column,\n      taskIds: newTaskIds\n    };\n    const newState = { ...state,\n      columns: { ...state.columns,\n        [newColumn.id]: newColumn\n      }\n    };\n    setState(newState);\n  };\n\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, state.columnOrder.map(columnId => {\n    const column = state.columns[columnId];\n    const tasks = column.tasksIds.map(taskId => state.tasks[taskId]);\n    return /*#__PURE__*/React.createElement(Column, {\n      key: column.id,\n      column: column,\n      tasks: tasks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }\n    });\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/joaquim/internship/react-dnd-course/src/App.js"],"names":["React","useState","initialData","Column","DragDropContext","App","state","setState","onDragEnd","result","destination","source","draggableId","droppableId","index","column","columns","newTaskIds","Array","from","taskIds","splice","newColumn","newState","id","columnOrder","map","columnId","tasks","tasksIds","taskId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,eAAT,QAAgC,qBAAhC;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACC,WAAD,CAAlC;;AAEA,QAAMM,SAAS,GAAIC,MAAD,IAAY;AAC1B,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,MAAf;AAAuBC,MAAAA;AAAvB,QAAuCH,MAA7C;;AAEA,QAAI,CAACC,WAAL,EAAkB;AACd;AACH;;AAED,QACIA,WAAW,CAACG,WAAZ,KAA4BF,MAAM,CAACE,WAAnC,IACAH,WAAW,CAACI,KAAZ,KAAsBH,MAAM,CAACG,KAFjC,EAGE;AACE;AACH;;AAED,UAAMC,MAAM,GAAGT,KAAK,CAACU,OAAN,CAAcL,MAAM,CAACE,WAArB,CAAf;AACA,UAAMI,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWJ,MAAM,CAACK,OAAlB,CAAnB;AACAH,IAAAA,UAAU,CAACI,MAAX,CAAkBV,MAAM,CAACG,KAAzB,EAAgC,CAAhC;AACAG,IAAAA,UAAU,CAACI,MAAX,CAAkBX,WAAW,CAACI,KAA9B,EAAqC,CAArC,EAAwCF,WAAxC;AAEA,UAAMU,SAAS,GAAG,EACd,GAAGP,MADW;AAEdK,MAAAA,OAAO,EAAEH;AAFK,KAAlB;AAKA,UAAMM,QAAQ,GAAG,EACb,GAAGjB,KADU;AAEbU,MAAAA,OAAO,EAAE,EACL,GAAGV,KAAK,CAACU,OADJ;AAEL,SAACM,SAAS,CAACE,EAAX,GAAgBF;AAFX;AAFI,KAAjB;AAQAf,IAAAA,QAAQ,CAACgB,QAAD,CAAR;AACH,GAjCD;;AAmCA,sBACI,oBAAC,eAAD;AACE,IAAA,SAAS,EAAEf,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKF,KAAK,CAACmB,WAAN,CAAkBC,GAAlB,CAAuBC,QAAQ,IAAI;AAClC,UAAMZ,MAAM,GAAGT,KAAK,CAACU,OAAN,CAAcW,QAAd,CAAf;AACA,UAAMC,KAAK,GAAGb,MAAM,CAACc,QAAP,CAAgBH,GAAhB,CAAqBI,MAAM,IAAIxB,KAAK,CAACsB,KAAN,CAAYE,MAAZ,CAA/B,CAAd;AAEA,wBAAO,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEf,MAAM,CAACS,EAApB;AAAwB,MAAA,MAAM,EAAET,MAAhC;AAAwC,MAAA,KAAK,EAAEa,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GALA,CAJL,CADJ;AAaD;;AAED,eAAevB,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport initialData from \"./initial-data\";\nimport Column from './components/Column.jsx'\nimport { DragDropContext } from 'react-beautiful-dnd'\n\nfunction App() {\n  const [state, setState] = useState(initialData);\n\n  const onDragEnd = (result) => {\n      const { destination, source, draggableId } = result;\n\n      if (!destination) {\n          return;\n      }\n\n      if (\n          destination.droppableId === source.droppableId &&\n          destination.index === source.index\n      ) {\n          return;\n      }\n\n      const column = state.columns[source.droppableId];\n      const newTaskIds = Array.from(column.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n          ...column,\n          taskIds: newTaskIds,\n      }\n\n      const newState = {\n          ...state,\n          columns: {\n              ...state.columns,\n              [newColumn.id]: newColumn,\n          }\n      }\n\n      setState(newState);\n  }\n\n  return (\n      <DragDropContext\n        onDragEnd={onDragEnd}\n\n      >\n          {state.columnOrder.map( columnId => {\n            const column = state.columns[columnId];\n            const tasks = column.tasksIds.map( taskId => state.tasks[taskId]);\n\n            return <Column key={column.id} column={column} tasks={tasks} />\n          })}\n      </DragDropContext>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}