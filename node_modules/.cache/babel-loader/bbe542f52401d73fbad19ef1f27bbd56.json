{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/joaquim/internship/kanban/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    padding: 8px;\\n    transition: background-color 0.2s ease;\\n    background-color: \",\";\\n    flex-grow: 1;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    padding: 8px;\\n    text-align: center;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    margin: 8px;\\n    border: 1px solid lightgrey;\\n    border-radius: 2px;\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n    min-height: 100%;\\n    background-color: #9CC5A1;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import Task from'./Task.jsx';import{Droppable}from'react-beautiful-dnd';var Container=styled.div(_templateObject());var Title=styled.h3(_templateObject2());var TaskList=styled.div(_templateObject3(),function(props){return props.isDraggingOver?'skyblue':'white';});var Column=function Column(props){return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Title,null,props.column.title),/*#__PURE__*/React.createElement(Droppable,{droppableId:props.column.id},function(provided,snapshot){return/*#__PURE__*/React.createElement(TaskList,Object.assign({ref:provided.innerRef},provided.droppableProps,{isDraggingOver:snapshot.isDraggingOver}),props.tasks.map(function(task,index){return/*#__PURE__*/React.createElement(Task,{key:task.id,task:task,index:index});}),provided.placeholder);}));};export default Column;","map":{"version":3,"sources":["/home/joaquim/internship/kanban/src/components/Column.jsx"],"names":["React","styled","Task","Droppable","Container","div","Title","h3","TaskList","props","isDraggingOver","Column","column","title","id","provided","snapshot","innerRef","droppableProps","tasks","map","task","index","placeholder"],"mappings":"q6BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,OAASC,SAAT,KAA0B,qBAA1B,CAGA,GAAMC,CAAAA,SAAS,CAAGH,MAAM,CAACI,GAAV,mBAAf,CAWA,GAAMC,CAAAA,KAAK,CAAGL,MAAM,CAACM,EAAV,oBAAX,CAIA,GAAMC,CAAAA,QAAQ,CAAGP,MAAM,CAACI,GAAV,oBAGW,SAAAI,KAAK,QAAIA,CAAAA,KAAK,CAACC,cAAN,CAAuB,SAAvB,CAAmC,OAAvC,EAHhB,CAAd,CAOA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACF,KAAD,CAAW,CAEtB,mBACI,oBAAC,SAAD,mBACI,oBAAC,KAAD,MAASA,KAAK,CAACG,MAAN,CAAaC,KAAtB,CADJ,cAEI,oBAAC,SAAD,EACI,WAAW,CAAEJ,KAAK,CAACG,MAAN,CAAaE,EAD9B,EAGK,SAACC,QAAD,CAAUC,QAAV,qBACG,oBAAC,QAAD,gBACI,GAAG,CAAED,QAAQ,CAACE,QADlB,EAEQF,QAAQ,CAACG,cAFjB,EAGI,cAAc,CAAEF,QAAQ,CAACN,cAH7B,GAKKD,KAAK,CAACU,KAAN,CAAYC,GAAZ,CAAiB,SAACC,IAAD,CAAOC,KAAP,qBAAiB,oBAAC,IAAD,EAAM,GAAG,CAAED,IAAI,CAACP,EAAhB,CAAoB,IAAI,CAAEO,IAA1B,CAAgC,KAAK,CAAEC,KAAvC,EAAjB,EAAjB,CALL,CAMKP,QAAQ,CAACQ,WANd,CADH,EAHL,CAFJ,CADJ,CAmBH,CArBD,CAuBA,cAAeZ,CAAAA,MAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Task from './Task.jsx'\nimport { Droppable } from 'react-beautiful-dnd'\n\n\nconst Container = styled.div`\n    margin: 8px;\n    border: 1px solid lightgrey;\n    border-radius: 2px;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    min-height: 100%;\n    background-color: #9CC5A1;\n`;\n\nconst Title = styled.h3`\n    padding: 8px;\n    text-align: center;\n`;\nconst TaskList = styled.div`\n    padding: 8px;\n    transition: background-color 0.2s ease;\n    background-color: ${ props => props.isDraggingOver ? 'skyblue' : 'white'};\n    flex-grow: 1;\n`;\n\nconst Column = (props) => {\n\n    return (\n        <Container>\n            <Title>{ props.column.title}</Title>\n            <Droppable\n                droppableId={props.column.id}\n            >\n                {(provided,snapshot) => (\n                    <TaskList\n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                        isDraggingOver={snapshot.isDraggingOver}\n                    >\n                        {props.tasks.map( (task, index) => <Task key={task.id} task={task} index={index}/>)}\n                        {provided.placeholder}\n                    </TaskList>\n                )}\n            </Droppable>\n        </Container>\n    );\n}\n\nexport default Column"]},"metadata":{},"sourceType":"module"}