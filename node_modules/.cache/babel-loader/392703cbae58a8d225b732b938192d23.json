{"ast":null,"code":"var _jsxFileName = \"/home/joaquim/internship/react-dnd-course/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport initialData from \"./initial-data\";\nimport Column from './components/Column.jsx';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nconst Container = styled.div`\n    display: flex;\n    flex: auto auto 33%;\n    flex-wrap: wrap-reverse;\n`;\n\nfunction App() {\n  const [state, setState] = useState(initialData);\n\n  const onDragEnd = result => {\n    console.log(result);\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    const column = state.columns[source.droppableId];\n    const newTaskIds = Array.from(column.taskIds);\n    console.log('newTaskIds', newTaskIds);\n    newTaskIds.splice(source.index, 1);\n    newTaskIds.splice(destination.index, 0, draggableId);\n    const newColumn = { ...column,\n      taskIds: newTaskIds\n    };\n    const newState = { ...state,\n      columns: { ...state.columns,\n        [newColumn.id]: newColumn\n      }\n    };\n    setState(newState);\n  };\n\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, state.columnOrder.map(columnId => {\n    const column = state.columns[columnId];\n    const tasks = column.taskIds.map(taskId => state.tasks[taskId]);\n    return /*#__PURE__*/React.createElement(Column, {\n      key: column.id,\n      column: column,\n      tasks: tasks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 24\n      }\n    });\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/joaquim/internship/react-dnd-course/src/App.js"],"names":["React","useState","initialData","Column","DragDropContext","styled","Container","div","App","state","setState","onDragEnd","result","console","log","destination","source","draggableId","droppableId","index","column","columns","newTaskIds","Array","from","taskIds","splice","newColumn","newState","id","columnOrder","map","columnId","tasks","taskId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AAC7B;AACA;AACA;AACA,CAJA;;AAMA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACC,WAAD,CAAlC;;AAEA,QAAMS,SAAS,GAAIC,MAAD,IAAY;AAE1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAM;AAAEG,MAAAA,WAAF;AAAeC,MAAAA,MAAf;AAAuBC,MAAAA;AAAvB,QAAuCL,MAA7C;;AAEA,QAAI,CAACG,WAAL,EAAkB;AACd;AACH;;AAED,QACIA,WAAW,CAACG,WAAZ,KAA4BF,MAAM,CAACE,WAAnC,IACAH,WAAW,CAACI,KAAZ,KAAsBH,MAAM,CAACG,KAFjC,EAGE;AACE;AACH;;AAED,UAAMC,MAAM,GAAGX,KAAK,CAACY,OAAN,CAAcL,MAAM,CAACE,WAArB,CAAf;AACA,UAAMI,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWJ,MAAM,CAACK,OAAlB,CAAnB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BQ,UAA1B;AACAA,IAAAA,UAAU,CAACI,MAAX,CAAkBV,MAAM,CAACG,KAAzB,EAAgC,CAAhC;AACAG,IAAAA,UAAU,CAACI,MAAX,CAAkBX,WAAW,CAACI,KAA9B,EAAqC,CAArC,EAAwCF,WAAxC;AAEA,UAAMU,SAAS,GAAG,EACd,GAAGP,MADW;AAEdK,MAAAA,OAAO,EAAEH;AAFK,KAAlB;AAKA,UAAMM,QAAQ,GAAG,EACb,GAAGnB,KADU;AAEbY,MAAAA,OAAO,EAAE,EACL,GAAGZ,KAAK,CAACY,OADJ;AAEL,SAACM,SAAS,CAACE,EAAX,GAAgBF;AAFX;AAFI,KAAjB;AAQAjB,IAAAA,QAAQ,CAACkB,QAAD,CAAR;AACH,GApCD;;AAsCA,sBACI,oBAAC,eAAD;AACE,IAAA,SAAS,EAAEjB,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACqB,WAAN,CAAkBC,GAAlB,CAAuBC,QAAQ,IAAI;AAClC,UAAMZ,MAAM,GAAGX,KAAK,CAACY,OAAN,CAAcW,QAAd,CAAf;AACA,UAAMC,KAAK,GAAGb,MAAM,CAACK,OAAP,CAAeM,GAAf,CAAoBG,MAAM,IAAIzB,KAAK,CAACwB,KAAN,CAAYC,MAAZ,CAA9B,CAAd;AAEA,wBAAO,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEd,MAAM,CAACS,EAApB;AAAwB,MAAA,MAAM,EAAET,MAAhC;AAAwC,MAAA,KAAK,EAAEa,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GALA,CADL,CAHJ,CADJ;AAcD;;AAED,eAAezB,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport initialData from \"./initial-data\";\nimport Column from './components/Column.jsx'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport styled from 'styled-components'\n\n\nconst Container = styled.div`\n    display: flex;\n    flex: auto auto 33%;\n    flex-wrap: wrap-reverse;\n`\n\nfunction App() {\n  const [state, setState] = useState(initialData);\n\n  const onDragEnd = (result) => {\n\n      console.log(result)\n      const { destination, source, draggableId } = result;\n\n      if (!destination) {\n          return;\n      }\n\n      if (\n          destination.droppableId === source.droppableId &&\n          destination.index === source.index\n      ) {\n          return;\n      }\n\n      const column = state.columns[source.droppableId];\n      const newTaskIds = Array.from(column.taskIds);\n      console.log('newTaskIds', newTaskIds)\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n          ...column,\n          taskIds: newTaskIds,\n      }\n\n      const newState = {\n          ...state,\n          columns: {\n              ...state.columns,\n              [newColumn.id]: newColumn,\n          }\n      }\n\n      setState(newState);\n  }\n\n  return (\n      <DragDropContext\n        onDragEnd={onDragEnd}\n      >\n          <Container>\n              {state.columnOrder.map( columnId => {\n                const column = state.columns[columnId];\n                const tasks = column.taskIds.map( taskId => state.tasks[taskId]);\n\n                return <Column key={column.id} column={column} tasks={tasks} />\n              })}\n          </Container>\n      </DragDropContext>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}