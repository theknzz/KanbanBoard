{"ast":null,"code":"import _defineProperty from\"/home/joaquim/internship/kanban/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/joaquim/internship/kanban/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _taggedTemplateLiteral from\"/home/joaquim/internship/kanban/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-wrap: wrap;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from'react';import'./App.css';import initialData from\"./initial-data\";import Column from'./components/Column.jsx';import{DragDropContext}from'react-beautiful-dnd';import styled from'styled-components';import Navbar from\"./components/Navbar\";import{connect}from'react-redux';import{updateBoard as _updateBoard}from\"./store/actions/taskActions\";var Container=styled.div(_templateObject());function App(props){// const onDragStart = (result) => {\n//   document.body.style.color = 'orange';\n// }\n//\n// const onDragUpdate = (result) => {\n//     document.body.style.color = 'red';\n// }\nvar onDragEnd=function onDragEnd(result){var _objectSpread2;// document.body.style.color = 'inherit';\nvar destination=result.destination,source=result.source,draggableId=result.draggableId;if(!destination){return;}if(destination.droppableId===source.droppableId&&destination.index===source.index){return;}var srcColumn=props.cols[source.droppableId];var srcTaskList=Array.from(srcColumn.taskIds);var destColumn=props.cols[destination.droppableId];var destTaskList=Array.from(destColumn.taskIds);srcTaskList.splice(source.index,1);if(source.droppableId===destination.droppableId)srcTaskList.splice(destination.index,0,draggableId);destTaskList.splice(destination.index,0,draggableId);var newSourceColumn=_objectSpread(_objectSpread({},srcColumn),{},{taskIds:srcTaskList});var newDestColumn=_objectSpread(_objectSpread({},destColumn),{},{taskIds:destTaskList});var board={tasks:props.tasks,columnOrder:props.columnOrder,columns:_objectSpread(_objectSpread({},props.cols),{},(_objectSpread2={},_defineProperty(_objectSpread2,source.droppableId,newSourceColumn),_defineProperty(_objectSpread2,destination.droppableId,newDestColumn),_objectSpread2))};props.updateBoard(board);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Navbar,null),/*#__PURE__*/React.createElement(DragDropContext,{onDragEnd:onDragEnd// onDragStart={onDragStart}\n// onDragUpdate={onDragUpdate}\n},/*#__PURE__*/React.createElement(Container,null,props.columnOrder&&props.columnOrder.map(function(columnId){var column=props.cols[columnId];var tasks=column.taskIds&&column.taskIds.map(function(taskId){return props.tasks[taskId];});console.log('dbg:',column);return/*#__PURE__*/React.createElement(Column,{key:column.id,column:column,tasks:tasks});}))));}var mapStateToProps=function mapStateToProps(state){return{columnOrder:state.columnOrder,cols:state.columns,tasks:state.tasks};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateBoard:function updateBoard(board){return dispatch(_updateBoard(board));}};};export default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/joaquim/internship/kanban/src/App.js"],"names":["React","useState","useEffect","initialData","Column","DragDropContext","styled","Navbar","connect","updateBoard","Container","div","App","props","onDragEnd","result","destination","source","draggableId","droppableId","index","srcColumn","cols","srcTaskList","Array","from","taskIds","destColumn","destTaskList","splice","newSourceColumn","newDestColumn","board","tasks","columnOrder","columns","map","columnId","column","taskId","console","log","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport initialData from \"./initial-data\";\nimport Column from './components/Column.jsx'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport styled from 'styled-components'\nimport Navbar from \"./components/Navbar\";\nimport { connect } from 'react-redux'\nimport {updateBoard} from \"./store/actions/taskActions\";\n\nconst Container = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`\n\nfunction App(props) {\n\n  // const onDragStart = (result) => {\n  //   document.body.style.color = 'orange';\n  // }\n  //\n  // const onDragUpdate = (result) => {\n  //     document.body.style.color = 'red';\n  // }\n\n  const onDragEnd = (result) => {\n      // document.body.style.color = 'inherit';\n      const { destination, source, draggableId } = result;\n\n      if (!destination) {\n          return;\n      }\n\n      if (\n          destination.droppableId === source.droppableId &&\n          destination.index === source.index\n      ) {\n          return;\n      }\n\n      const srcColumn = props.cols[source.droppableId];\n      const srcTaskList = Array.from(srcColumn.taskIds);\n\n      const destColumn = props.cols[destination.droppableId];\n      const destTaskList = Array.from(destColumn.taskIds);\n\n      srcTaskList.splice(source.index, 1);\n\n      if (source.droppableId === destination.droppableId)\n        srcTaskList.splice(destination.index, 0, draggableId);\n\n      destTaskList.splice(destination.index, 0, draggableId);\n\n      const newSourceColumn = {\n          ...srcColumn,\n          taskIds: srcTaskList,\n      }\n\n      const newDestColumn = {\n          ...destColumn,\n          taskIds: destTaskList,\n      }\n\n\n      const board = {\n          tasks: props.tasks,\n          columnOrder: props.columnOrder,\n          columns: {\n              ...props.cols,\n              [source.droppableId]: newSourceColumn,\n              [destination.droppableId]: newDestColumn,\n          }\n      }\n\n      props.updateBoard(board)\n  }\n\n  return (\n      <>\n          <Navbar />\n          <DragDropContext\n            onDragEnd={onDragEnd}\n            // onDragStart={onDragStart}\n            // onDragUpdate={onDragUpdate}\n          >\n              <Container>\n                  {props.columnOrder && props.columnOrder.map( columnId => {\n                      const column = props.cols[columnId];\n                      const tasks = column.taskIds && column.taskIds.map( taskId => props.tasks[taskId]);\n                      console.log('dbg:', column)\n                      return <Column key={column.id} column={column} tasks={tasks} />\n                  })}\n              </Container>\n          </DragDropContext>\n      </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        columnOrder: state.columnOrder,\n        cols: state.columns,\n        tasks: state.tasks,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateBoard: (board) => dispatch(updateBoard(board)),\n    }\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}