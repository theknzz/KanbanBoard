{"ast":null,"code":"import initialData from \"../../initial-data\";\n\nconst rootReducer = (state = initialData, action) => {\n  switch (action.type) {\n    case 'CREATE_TASK':\n      const newTasks = { ...state.tasks,\n        [action.id]: {\n          id: action.id,\n          content: action.taskInfo.task\n        }\n      };\n      const taskList = state.columns[action.taskInfo.columnId].taskIds;\n      const newColumns = { ...state.columns,\n        [action.taskInfo.columnId]: {\n          id: action.taskInfo.columnId,\n          title: action.taskInfo.title,\n          taskIds: [...taskList, action.id]\n        }\n      };\n      return { ...state,\n        tasks: newTasks,\n        columns: newColumns\n      };\n\n    case 'UPDATE_BOARD':\n      return {\n        tasks: action.board.tasks,\n        columns: action.board.columns,\n        columnOrder: action.board.columnOrder\n      };\n\n    case 'DELETE_TASK':\n      // filter all the tasks and delete the respective one\n      const tasks = state.tasks;\n      delete tasks[action.taskId]; // pick the task's column\n\n      let col = state.columns[action.columnId]; // get the tasks from that column\n\n      let tasksFromCol = Array.from(col.taskIds); // filter those tasks and delete the respective one\n\n      tasksFromCol = state.tasks.filter(task => task.id !== action.taskId); // update the column\n      // col.taskIds = tasksFromCol;\n      // update the state\n\n      return { ...tasks,\n        [col.id]: { ...col,\n          tasksIds: tasksFromCol\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/joaquim/internship/kanban/src/store/reducers/rootReducer.js"],"names":["initialData","rootReducer","state","action","type","newTasks","tasks","id","content","taskInfo","task","taskList","columns","columnId","taskIds","newColumns","title","board","columnOrder","taskId","col","tasksFromCol","Array","from","filter","tasksIds"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,oBAAxB;;AAEA,MAAMC,WAAW,GAAG,CAAEC,KAAK,GAAGF,WAAV,EAAuBG,MAAvB,KAAkC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACI,YAAMC,QAAQ,GAAG,EACb,GAAGH,KAAK,CAACI,KADI;AAEb,SAACH,MAAM,CAACI,EAAR,GAAa;AACTA,UAAAA,EAAE,EAAEJ,MAAM,CAACI,EADF;AAETC,UAAAA,OAAO,EAAEL,MAAM,CAACM,QAAP,CAAgBC;AAFhB;AAFA,OAAjB;AAQA,YAAMC,QAAQ,GAAGT,KAAK,CAACU,OAAN,CAAcT,MAAM,CAACM,QAAP,CAAgBI,QAA9B,EAAwCC,OAAzD;AAEA,YAAMC,UAAU,GAAG,EACf,GAAGb,KAAK,CAACU,OADM;AAEf,SAACT,MAAM,CAACM,QAAP,CAAgBI,QAAjB,GAA4B;AACxBN,UAAAA,EAAE,EAAEJ,MAAM,CAACM,QAAP,CAAgBI,QADI;AAExBG,UAAAA,KAAK,EAAEb,MAAM,CAACM,QAAP,CAAgBO,KAFC;AAGxBF,UAAAA,OAAO,EAAE,CAAC,GAAGH,QAAJ,EAAcR,MAAM,CAACI,EAArB;AAHe;AAFb,OAAnB;AASA,aAAO,EACH,GAAGL,KADA;AAEHI,QAAAA,KAAK,EAAED,QAFJ;AAGHO,QAAAA,OAAO,EAAEG;AAHN,OAAP;;AAKJ,SAAK,cAAL;AACI,aAAO;AACHT,QAAAA,KAAK,EAAEH,MAAM,CAACc,KAAP,CAAaX,KADjB;AAEHM,QAAAA,OAAO,EAAET,MAAM,CAACc,KAAP,CAAaL,OAFnB;AAGHM,QAAAA,WAAW,EAAEf,MAAM,CAACc,KAAP,CAAaC;AAHvB,OAAP;;AAKJ,SAAK,aAAL;AACI;AACA,YAAMZ,KAAK,GAAGJ,KAAK,CAACI,KAApB;AACA,aAAOA,KAAK,CAACH,MAAM,CAACgB,MAAR,CAAZ,CAHJ,CAII;;AACA,UAAIC,GAAG,GAAGlB,KAAK,CAACU,OAAN,CAAcT,MAAM,CAACU,QAArB,CAAV,CALJ,CAMI;;AACA,UAAIQ,YAAY,GAAGC,KAAK,CAACC,IAAN,CAAWH,GAAG,CAACN,OAAf,CAAnB,CAPJ,CAQI;;AACAO,MAAAA,YAAY,GAAGnB,KAAK,CAACI,KAAN,CAAYkB,MAAZ,CAAmBd,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYJ,MAAM,CAACgB,MAA9C,CAAf,CATJ,CAWI;AACA;AAEA;;AACA,aAAO,EACH,GAAGb,KADA;AAEH,SAACc,GAAG,CAACb,EAAL,GAAU,EACN,GAAGa,GADG;AAENK,UAAAA,QAAQ,EAAEJ;AAFJ;AAFP,OAAP;;AAOJ;AACI,aAAOnB,KAAP;AAvDR;AAyDH,CA1DD;;AA4DA,eAAeD,WAAf","sourcesContent":["import initialData from \"../../initial-data\";\n\nconst rootReducer = ( state = initialData, action) => {\n    switch(action.type) {\n        case 'CREATE_TASK':\n            const newTasks = {\n                ...state.tasks,\n                [action.id]: {\n                    id: action.id,\n                    content: action.taskInfo.task,\n                }\n            };\n\n            const taskList = state.columns[action.taskInfo.columnId].taskIds;\n\n            const newColumns = {\n                ...state.columns,\n                [action.taskInfo.columnId]: {\n                    id: action.taskInfo.columnId,\n                    title: action.taskInfo.title,\n                    taskIds: [...taskList, action.id]\n                }\n            }\n\n            return {\n                ...state,\n                tasks: newTasks,\n                columns: newColumns,\n            }\n        case 'UPDATE_BOARD':\n            return {\n                tasks: action.board.tasks,\n                columns: action.board.columns,\n                columnOrder: action.board.columnOrder,\n            }\n        case 'DELETE_TASK':\n            // filter all the tasks and delete the respective one\n            const tasks = state.tasks;\n            delete tasks[action.taskId];\n            // pick the task's column\n            let col = state.columns[action.columnId];\n            // get the tasks from that column\n            let tasksFromCol = Array.from(col.taskIds);\n            // filter those tasks and delete the respective one\n            tasksFromCol = state.tasks.filter(task => task.id !== action.taskId);\n\n            // update the column\n            // col.taskIds = tasksFromCol;\n\n            // update the state\n            return {\n                ...tasks,\n                [col.id]: {\n                    ...col,\n                    tasksIds: tasksFromCol,\n                }\n            }\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}