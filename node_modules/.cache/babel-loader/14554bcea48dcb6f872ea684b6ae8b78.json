{"ast":null,"code":"var _jsxFileName = \"/home/joaquim/internship/kanban/src/components/tasks/CreateTask.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nconst CreateTask = props => {\n  const [title, setTitle] = useState('new task');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('submit: ' + title);\n    props.addTask({\n      title\n    });\n  };\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card task-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content black-text text-darken-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: 'title',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: 'text',\n    name: 'title',\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: 'btn btn-small waves-effect waves-light',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"Add task\"))));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTask: newTask => {\n      dispatch({\n        type: 'ADD_TASK',\n        content: newTask\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(CreateTask);","map":{"version":3,"sources":["/home/joaquim/internship/kanban/src/components/tasks/CreateTask.js"],"names":["React","useState","connect","CreateTask","props","title","setTitle","handleSubmit","e","preventDefault","console","log","addTask","handleChange","target","value","mapDispatchToProps","dispatch","newTask","type","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,UAAD,CAAlC;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaN,KAAzB;AACAD,IAAAA,KAAK,CAACQ,OAAN,CAAc;AAACP,MAAAA;AAAD,KAAd;AACH,GAJD;;AAMA,QAAMQ,YAAY,GAAIL,CAAD,IAAO;AACxBF,IAAAA,QAAQ,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,sBAEI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAER,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAE,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAO,IAAA,IAAI,EAAE,MAAb;AAAqB,IAAA,IAAI,EAAE,OAA3B;AAAoC,IAAA,QAAQ,EAAEM,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,SAAS,EAAE,wCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,CADJ,CAFJ;AAYH,CA1BD;;AA4BA,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHL,IAAAA,OAAO,EAAGM,OAAD,IAAc;AACnBD,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,OAAO,EAAEF;AAA7B,OAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAehB,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCb,UAAlC,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst CreateTask = (props) => {\n\n    const [title, setTitle] = useState('new task');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('submit: ' + title);\n        props.addTask({title})\n    }\n\n    const handleChange = (e) => {\n        setTitle(e.target.value)\n    }\n\n    return(\n\n        <div className=\"card task-summary\">\n            <form onSubmit={handleSubmit}>\n                <div className=\"card-content black-text text-darken-3\">\n                    <label htmlFor={'title'}>Title</label>\n                    <input type={'text'} name={'title'} onChange={handleChange}/>\n                    <button className={'btn btn-small waves-effect waves-light'}>Add task</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addTask: (newTask) =>  {\n            dispatch({ type: 'ADD_TASK', content: newTask})\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(CreateTask)"]},"metadata":{},"sourceType":"module"}