{"ast":null,"code":"import _toConsumableArray from\"/home/joaquim/internship/kanban/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/home/joaquim/internship/kanban/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/joaquim/internship/kanban/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import initialData from\"../../initial-data\";var rootReducer=function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialData;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'CREATE_TASK':var newTasks=_objectSpread(_objectSpread({},state.tasks),{},_defineProperty({},action.id,{id:action.id,content:action.taskInfo.task}));var taskList=state.columns[action.taskInfo.columnId].taskIds;var newColumns=_objectSpread(_objectSpread({},state.columns),{},_defineProperty({},action.taskInfo.columnId,{id:action.taskInfo.columnId,title:action.taskInfo.title,taskIds:[].concat(_toConsumableArray(taskList),[action.id])}));return _objectSpread(_objectSpread({},state),{},{tasks:newTasks,columns:newColumns});case'UPDATE_BOARD':return{tasks:action.board.tasks,columns:action.board.columns,columnOrder:action.board.columnOrder};default:return state;}};export default rootReducer;","map":{"version":3,"sources":["/home/joaquim/internship/kanban/src/store/reducers/rootReducer.js"],"names":["initialData","rootReducer","state","action","type","newTasks","tasks","id","content","taskInfo","task","taskList","columns","columnId","taskIds","newColumns","title","board","columnOrder"],"mappings":"2cAAA,MAAOA,CAAAA,WAAP,KAAwB,oBAAxB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAkC,IAAhCC,CAAAA,KAAgC,2DAAxBF,WAAwB,IAAXG,CAAAA,MAAW,2CAClD,OAAOA,MAAM,CAACC,IAAd,EACI,IAAK,aAAL,CACI,GAAMC,CAAAA,QAAQ,gCACPH,KAAK,CAACI,KADC,wBAETH,MAAM,CAACI,EAFE,CAEG,CACTA,EAAE,CAAEJ,MAAM,CAACI,EADF,CAETC,OAAO,CAAEL,MAAM,CAACM,QAAP,CAAgBC,IAFhB,CAFH,EAAd,CAQA,GAAMC,CAAAA,QAAQ,CAAGT,KAAK,CAACU,OAAN,CAAcT,MAAM,CAACM,QAAP,CAAgBI,QAA9B,EAAwCC,OAAzD,CAEA,GAAMC,CAAAA,UAAU,gCACTb,KAAK,CAACU,OADG,wBAEXT,MAAM,CAACM,QAAP,CAAgBI,QAFL,CAEgB,CACxBN,EAAE,CAAEJ,MAAM,CAACM,QAAP,CAAgBI,QADI,CAExBG,KAAK,CAAEb,MAAM,CAACM,QAAP,CAAgBO,KAFC,CAGxBF,OAAO,8BAAMH,QAAN,GAAgBR,MAAM,CAACI,EAAvB,EAHiB,CAFhB,EAAhB,CASA,sCACOL,KADP,MAEII,KAAK,CAAED,QAFX,CAGIO,OAAO,CAAEG,UAHb,GAKJ,IAAK,cAAL,CACI,MAAO,CACHT,KAAK,CAAEH,MAAM,CAACc,KAAP,CAAaX,KADjB,CAEHM,OAAO,CAAET,MAAM,CAACc,KAAP,CAAaL,OAFnB,CAGHM,WAAW,CAAEf,MAAM,CAACc,KAAP,CAAaC,WAHvB,CAAP,CAKJ,QACI,MAAOhB,CAAAA,KAAP,CAjCR,CAmCH,CApCD,CAsCA,cAAeD,CAAAA,WAAf","sourcesContent":["import initialData from \"../../initial-data\";\n\nconst rootReducer = ( state = initialData, action) => {\n    switch(action.type) {\n        case 'CREATE_TASK':\n            const newTasks = {\n                ...state.tasks,\n                [action.id]: {\n                    id: action.id,\n                    content: action.taskInfo.task,\n                }\n            };\n\n            const taskList = state.columns[action.taskInfo.columnId].taskIds;\n\n            const newColumns = {\n                ...state.columns,\n                [action.taskInfo.columnId]: {\n                    id: action.taskInfo.columnId,\n                    title: action.taskInfo.title,\n                    taskIds: [...taskList, action.id]\n                }\n            }\n\n            return {\n                ...state,\n                tasks: newTasks,\n                columns: newColumns,\n            }\n        case 'UPDATE_BOARD':\n            return {\n                tasks: action.board.tasks,\n                columns: action.board.columns,\n                columnOrder: action.board.columnOrder,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}